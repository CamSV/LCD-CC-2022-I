#include <stdio.h>
#include <sys/types.h>
#include <unistd.h>

int main(void){

    int fpid;

    fpid = fork();

    printf("ID del proceso: %d\n", fpid);

    if (fpid == 0)
        // se crea el proceso hijo
        printf("Proceso hijo \n" );
    else
        // ejecuta la continuaci√≥n del proceso padre
        printf("Proceso padre \n");


    return(0);

}
/*------------------------------------------------------*/

#include <stdio.h>
#include <stdlib.h>
#include <sys/types.h>
#include <unistd.h>

int main(void){

    int i = 1;

    switch(fork()){
        // codigo para el error
        case -1 :
            perror("Error al crear el proceso");
            exit(-1);
            break;

        case 0 :
        // codigo para el proceso hijo
            while (i<=10){
                sleep (1);
                printf("\t Soy el proceso hijo: %d\n", i++);
            }
            break;

        default :
        // codigo para el padre
            while (i<=10){
                printf("Soy el proceso padre: %d\n", i++);
                sleep(2);
            }
    }

    return(0);
}
/*--------------------------------------------------------------*/

#include <stdio.h>
#include <sys/types.h>
#include <unistd.h>

int main (void)
{
  int i;
  int padre;

  padre = 1;
  for (i=1; i <= 3; i++)
  {
    if (padre == 1)
      {
        if (fork() == 0) /* Proceso hijo */
        {
          printf(" \tEste es el proceso hijo %d, con ID: %d y padre ID: %d\n", i, getpid(), getppid() );
          padre = 0;
        }
        else /* Proceso padre */
        {
          printf("Este es el proceso padre con ID %d\n", getpid() );
          padre = 1;
        }
      }
  }
  return 0;
}
/*-------------------------------------------------------------*/

#include <stdio.h>
#include <sys/types.h>
#include <unistd.h>

int main(void) {

    printf("ID de proceso: %d\n", getpid());
    printf("ID de proceso padre: %d\n", getppid());
    printf("ID de usuario propietario: %d\n", getuid());

    return(0);
}
